name: Build and Deploy for Main Branch

on:
  push:
    branches:
      - 'main' # Trigger only on push to the main branch
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  USER_SERVICE_IMAGE: docker.io/${{ secrets.DOCKER_USERNAME }}/user-service:0.0.1
  DEPARTMENT_SERVICE_IMAGE: docker.io/${{ secrets.DOCKER_USERNAME }}/department-service:0.0.1
  CONFIG_SERVER_IMAGE: docker.io/${{ secrets.DOCKER_USERNAME }}/cloud-config-server:0.0.1
  CLOUD_GATEWAY_IMAGE: docker.io/${{ secrets.DOCKER_USERNAME }}/cloud-gateway:0.0.1
  HYSTRIX_DASHBOARD_IMAGE: docker.io/${{ secrets.DOCKER_USERNAME }}/hystrix-dashboard:0.0.1
  SERVICE_REGISTRY_IMAGE: docker.io/${{ secrets.DOCKER_USERNAME }}/service-registry:0.0.1

jobs:
  snyk-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Scan for User Service
        run: snyk code test user-service --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Scan for Department Service
        run: snyk code test department-service --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Scan for Cloud Config Server
        run: snyk code test cloud-config-server --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Scan for Cloud Gateway
        run: snyk code test cloud-gateway --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Scan for Hystrix Dashboard
        run: snyk code test hystrix-dashboard --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Code Scan for Service Registry
        run: snyk code test service-registry --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: snyk-security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: docker.io
          server-username: $MAVEN_USERNAME
          server-password: $MAVEN_PASSWORD

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push User-service
        run: mvn -B package dockerfile:push --file user-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push department-service
        run: mvn -B package dockerfile:push --file department-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push cloud-config-server
        run: mvn -B package dockerfile:push --file cloud-config-server/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push cloud-gateway
        run: mvn -B package dockerfile:push --file cloud-gateway/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push hystrix-dashboard
        run: mvn -B package dockerfile:push --file hystrix-dashboard/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push service-registry
        run: mvn -B package dockerfile:push --file service-registry/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout k8s manifests
        uses: actions/checkout@v3

      - name: kubectl - Google Cloud GKE cluster.
        uses: ameydev/gke-kubectl-action@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
          CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
          ZONE_NAME: ${{ env.GKE_ZONE }}
        with:
          args: apply -f k8s/
